{"version":3,"sources":["components/Filters/filterSlice.js","components/Filters/index.js","redux/selector.js","components/TodoList/todoListSlice.js","components/Todo/index.js","components/TodoList/index.js","App.js","redux/configureStore.js","index.js"],"names":["filterSlice","createSlice","name","initialState","search","status","priority","reducers","searchFilterChang","state","action","payload","statusFilterChange","priorityFilterChange","actions","Search","Input","Filters","useState","setStatus","setPriority","dispatch","useDispatch","setSearch","justify","span","Paragraph","style","marginBottom","placeholder","value","onChange","e","target","sm","marginTop","Group","mode","allowClear","width","Option","label","color","todoRemaining","createSelector","filter","todoList","searchText","priorityFilter","todo","length","includes","completed","todoListSlice","id","addTodo","push","toggleTodo","crrTodo","find","deleteTodo","item","editTodoByName","index","findIndex","editTodoByPriority","priorityColorMapping","High","Medium","Low","Todo","isEdit","setIsEdit","editTodoName","setEditTodoName","checked","setChecked","editTodoPrority","setEditTodoPriority","opacity","textDecoration","offse","minWidth","outline","border","borderBottom","defaultValue","margin","marginRight","type","onClick","SaveOutlined","EditOutlined","danger","DeleteOutlined","TodoList","todoName","setTodoName","useSelector","height","display","compact","v4","alert","overflowY","map","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","fontSize","store","configureStore","require","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8d120ed.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n  search: \"\",\r\n  status: \"All\",\r\n  priority: [],\r\n};\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    searchFilterChang: (state, action) => {\r\n      state.search = action.payload;\r\n    },\r\n    statusFilterChange: (state, action) => {\r\n      state.status = action.payload;\r\n    },\r\n    priorityFilterChange: (state, action) => {\r\n      state.priority = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { searchFilterChang, statusFilterChange, priorityFilterChange } =\r\n  filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","import { Col, Input, Radio, Row, Select, Tag, Typography } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  priorityFilterChange,\r\n  searchFilterChang,\r\n  statusFilterChange\r\n} from \"./filterSlice\";\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n  const [status, setStatus] = useState(\"All\");\r\n  const [priority, setPriority] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const handleFilterStatus = (e) => {\r\n    setStatus(e.target.value);\r\n    dispatch(statusFilterChange(e.target.value));\r\n  };\r\n  const [search, setSearch] = useState(\"\");\r\n  const searchFilterChange = (e) => {\r\n    setSearch(e.target.value);\r\n    dispatch(searchFilterChang(e.target.value));\r\n  };\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value);\r\n    dispatch(priorityFilterChange(value));\r\n  };\r\n  return (\r\n    <Row justify=\"center\">\r\n      <Col span={24}>\r\n        <Typography.Paragraph style={{ marginBottom: 3 }}>\r\n          Search By name Todo\r\n        </Typography.Paragraph>\r\n        <Search\r\n          placeholder=\"Enter your search text ...\"\r\n          value={search}\r\n          onChange={searchFilterChange}\r\n        />\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph style={{ marginBottom: 3, marginTop: 8 }}>\r\n          Filter By Status Todo\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={status} onChange={handleFilterStatus}>\r\n          <Radio value=\"All\">All</Radio>\r\n          <Radio value=\"Completed\">Completed</Radio>\r\n          <Radio value=\"Todo\">To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n      <Col sm={24}>\r\n        <Typography.Paragraph style={{ marginBottom: 3, marginTop: 8 }}>\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode=\"multiple\"\r\n          allowClear\r\n          placeholder=\"Please multiple select\"\r\n          style={{ width: \"100%\" }}\r\n          value={priority}\r\n          onChange={handlePriorityChange}\r\n        >\r\n          <Select.Option value=\"High\" label=\"High\">\r\n            <Tag color=\"red\">High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Medium\" label=\"Medium\">\r\n            <Tag color=\"blue\">Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value=\"Low\" label=\"Low\">\r\n            <Tag color=\"gray\">Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const searchTextSelector = (state) => state.filter.search;\r\nexport const searchStatusSelector = (state) => state.filter.status;\r\nexport const prioritySelector = (state) => state.filter.priority;\r\nexport const todoListSelector = (state) => state.todoList;\r\n\r\nexport const todoRemaining = createSelector(\r\n  searchTextSelector,\r\n  searchStatusSelector,\r\n  prioritySelector,\r\n  todoListSelector,\r\n  (searchText, status, priorityFilter, todoList) => {\r\n    return todoList.filter((todo) => {\r\n      if (status === \"All\") {\r\n        return priorityFilter.length > 0\r\n          ? todo.name.includes(searchText) &&\r\n              priorityFilter.includes(todo.priority)\r\n          : todo.name.includes(searchText);\r\n      } else {\r\n        return (\r\n          todo.name.includes(searchText) &&\r\n          (status === \"Completed\" ? todo.completed : !todo.completed) &&\r\n          (priorityFilter.length > 0\r\n            ? priorityFilter.includes(todo.priority)\r\n            : true)\r\n        );\r\n      }\r\n    });\r\n  }\r\n);\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = [\r\n  { id: 1, name: \"Learn ReactJS\", completed: true, priority: \"High\" },\r\n  { id: 2, name: \"Learn Redux\", completed: false, priority: \"Low\" },\r\n  { id: 3, name: \"Learn ReduxToolKit\", completed: false, priority: \"Medium\" },\r\n  { id: 4, name: \"Learn MaterialUI\", completed: true, priority: \"High\" },\r\n  { id: 5, name: \"Learn ReactHookForm\", completed: false, priority: \"Low\" },\r\n];\r\nconst todoListSlice = createSlice({\r\n  name: \"todoList\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    toggleTodo: (state, action) => {\r\n      const crrTodo = state.find((todo) => todo.id === action.payload);\r\n      if (crrTodo) crrTodo.completed = !crrTodo.completed;\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return state.filter((item) => item.id !== action.payload);\r\n    },\r\n    editTodoByName: (state, action) => {\r\n      const index = state.findIndex((item) => item.id === action.payload.id);\r\n      const updatedState = [...state];\r\n      updatedState[index].name = action.payload.name;\r\n    },\r\n    editTodoByPriority: (state, action) => {\r\n      const index = state.findIndex((item) => item.id === action.payload.id);\r\n      const updatedState = [...state];\r\n      updatedState[index].priority = action.payload.priority;\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  addTodo,\r\n  toggleTodo,\r\n  deleteTodo,\r\n  editTodoByName,\r\n  editTodoByPriority,\r\n} = todoListSlice.actions;\r\nexport default todoListSlice.reducer;\r\n","import { DeleteOutlined, EditOutlined, SaveOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Col, Input, Row, Select, Tag } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  deleteTodo,\r\n  editTodoByName,\r\n  editTodoByPriority,\r\n  toggleTodo,\r\n} from \"../TodoList/todoListSlice\";\r\n\r\nconst priorityColorMapping = {\r\n  High: \"red\",\r\n  Medium: \"blue\",\r\n  Low: \"gray\",\r\n};\r\n\r\nexport default function Todo({ name, priority, completed, id }) {\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [editTodoName, setEditTodoName] = useState(name);\r\n  const [checked, setChecked] = useState(completed);\r\n  const [editTodoPrority, setEditTodoPriority] = useState(priority);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e) => {\r\n    setEditTodoName(e.target.value);\r\n  };\r\n  const HandleSave = () => {\r\n    if (editTodoName) {\r\n      dispatch(editTodoByName({ id: id, name: editTodoName }));\r\n    }\r\n    dispatch(editTodoByPriority({ id: id, priority: editTodoPrority }));\r\n\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    dispatch(toggleTodo(id));\r\n  };\r\n  const handleDeleteTodo = () => {\r\n    dispatch(deleteTodo(id));\r\n  };\r\n  const HandleEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n  const handleSelectChange = (value) => {\r\n    setEditTodoPriority(value);\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify=\"space-between\"\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.7, textDecoration: \"line-through\" } : {}),\r\n      }}\r\n    >\r\n      <Col offse={12}>\r\n        <Checkbox\r\n          checked={checked}\r\n          onChange={toggleCheckbox}\r\n          style={{ minWidth: 200 }}\r\n        >\r\n          {isEdit ? (\r\n            <Input\r\n              value={editTodoName}\r\n              style={{\r\n                outline: \"none\",\r\n                border: \"none\",\r\n                borderBottom: \"1px solid green\",\r\n              }}\r\n              onChange={handleInputChange}\r\n            />\r\n          ) : (\r\n            editTodoName\r\n          )}\r\n        </Checkbox>\r\n        {isEdit ? (\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            onChange={handleSelectChange}\r\n            value={editTodoPrority}\r\n          >\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n        ) : (\r\n          <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n            {priority}\r\n          </Tag>\r\n        )}\r\n      </Col>\r\n      <Col>\r\n        {isEdit ? (\r\n          <Button\r\n            style={{ marginRight: \"10px\" }}\r\n            type=\"primary\"\r\n            onClick={HandleSave}\r\n          >\r\n            {/* Save */}\r\n            <SaveOutlined />\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            style={{ marginRight: \"10px\" }}\r\n            type=\"primary\"\r\n            onClick={HandleEdit}\r\n          >\r\n            {/* Edit */}\r\n            <EditOutlined />\r\n          </Button>\r\n        )}\r\n\r\n        <Button danger onClick={handleDeleteTodo}>\r\n          {/* Delete */}\r\n          <DeleteOutlined />\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Button, Col, Input, Row, Select, Tag } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { v4 } from \"uuid\";\r\nimport { todoRemaining } from \"../../redux/selector\";\r\nimport Todo from \"../Todo\";\r\nimport { addTodo } from \"./todoListSlice\";\r\n\r\nexport default function TodoList() {\r\n  const [todoName, setTodoName] = useState(\"\");\r\n  const [priority, setPriority] = useState(\"Medium\");\r\n  const dispatch = useDispatch();\r\n  const todoList = useSelector(todoRemaining);\r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value);\r\n  };\r\n\r\n  const handleSelectChange = (value) => {\r\n    setPriority(value);\r\n  };\r\n  const handleAddTodo = () => {\r\n    todoName\r\n      ? dispatch(\r\n          addTodo({\r\n            id: v4(),\r\n            name: todoName,\r\n            completed: false,\r\n            priority: priority,\r\n          })\r\n        )\r\n      : alert(\"Please type your todoname\");\r\n    setTodoName(\"\");\r\n  };\r\n  return (\r\n    <Row style={{ height: \"calc(100% - 40px)\" }}>\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: \"flex\" }} compact>\r\n          <Input value={todoName} onChange={handleInputChange} />\r\n          <Select\r\n            defaultValue=\"Medium\"\r\n            onChange={handleSelectChange}\r\n            value={priority}\r\n          >\r\n            <Select.Option value=\"High\" label=\"High\">\r\n              <Tag color=\"red\">High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Medium\" label=\"Medium\">\r\n              <Tag color=\"blue\">Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value=\"Low\" label=\"Low\">\r\n              <Tag color=\"gray\">Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n          <Button type=\"primary\" onClick={handleAddTodo}>\r\n            Add\r\n          </Button>\r\n        </Input.Group>\r\n      </Col>\r\n\r\n      <Col\r\n        span={24}\r\n        style={{ height: \"calc(100% - 100px)\", overflowY: \"auto\" }}\r\n      >\r\n        {todoList.length > 0 &&\r\n          todoList.map((todo, index) => (\r\n            <Todo\r\n              key={todo.id}\r\n              index={index}\r\n              id={todo.id}\r\n              name={todo.name}\r\n              priority={todo.priority}\r\n              completed={todo.completed}\r\n            />\r\n          ))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Divider, Typography } from \"antd\";\r\nimport \"./App.css\";\r\nimport Filters from \"./components/Filters\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 600,\r\n        margin: \"0 auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"white\",\r\n        padding: 20,\r\n        boxShadow: \"0 0 10px 4px #bfbfbf\",\r\n        borderRadius: 5,\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <Typography.Paragraph style={{ textAlign: \"center\", fontSize: 20 }}>\r\n        Todo App with Redux-toolkit\r\n      </Typography.Paragraph>\r\n      <Filters />\r\n      <Divider />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import filterSlice from \"../components/Filters/filterSlice\";\r\nimport todoListSlice from \"../components/TodoList/todoListSlice\";\r\n\r\nconst { configureStore } = require(\"@reduxjs/toolkit\");\r\n\r\n\r\nconst store=configureStore({\r\n        reducer:{\r\n                filter:filterSlice,\r\n                todoList:todoListSlice\r\n        }\r\n})\r\nexport default store","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/configureStore\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}